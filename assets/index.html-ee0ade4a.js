const n=JSON.parse(`{"key":"v-5cc0e6fe","path":"/chinese/reading/","title":"阅读（Reading）","lang":"en-US","frontmatter":{"title":"阅读（Reading）","home":false,"index":false,"icon":"list-check","navbar":true,"description":"从左侧边栏选择相关内容 Common Function import os import sys from pypinyin import pinyin, lazy_pinyin, Style def isChinese(word): if not '，。？！：；、）（“”…《 》【】——·'.__contains__(word): return '\\\\u0e00'&lt;=word&lt;='\\\\u9fa5' return False def get_pinyin_html(words, pinyins): if len(words) != len(pinyins): print(words) print(pinyins) raise \\"Length is not equals\\" ret = \\"\\" for i in range(len(words)): ret = f\\"{ret}&lt;ruby&gt;{words[i]}&lt;rt&gt;{pinyins[i][0]}&lt;/rt&gt;&lt;/ruby&gt;\\" return ret def htmlPinyin(words): ret = \\"\\" offset = 0 text = \\"\\" for word in words: if isChinese(word): text = f\\"{text}{word}\\" else: #process pinyin text_pinyin = pinyin(text) if len(text) &gt; 0: ret = f\\"{ret}{get_pinyin_html(text, text_pinyin)}{word}\\" else: ret = f\\"{ret}{word}\\" #initialize text text = \\"\\" return ret","head":[["meta",{"property":"og:url","content":"https://seamice.github.io/blog/chinese/reading/"}],["meta",{"property":"og:site_name","content":"Yichi's Blog"}],["meta",{"property":"og:title","content":"阅读（Reading）"}],["meta",{"property":"og:description","content":"从左侧边栏选择相关内容 Common Function import os import sys from pypinyin import pinyin, lazy_pinyin, Style def isChinese(word): if not '，。？！：；、）（“”…《 》【】——·'.__contains__(word): return '\\\\u0e00'&lt;=word&lt;='\\\\u9fa5' return False def get_pinyin_html(words, pinyins): if len(words) != len(pinyins): print(words) print(pinyins) raise \\"Length is not equals\\" ret = \\"\\" for i in range(len(words)): ret = f\\"{ret}&lt;ruby&gt;{words[i]}&lt;rt&gt;{pinyins[i][0]}&lt;/rt&gt;&lt;/ruby&gt;\\" return ret def htmlPinyin(words): ret = \\"\\" offset = 0 text = \\"\\" for word in words: if isChinese(word): text = f\\"{text}{word}\\" else: #process pinyin text_pinyin = pinyin(text) if len(text) &gt; 0: ret = f\\"{ret}{get_pinyin_html(text, text_pinyin)}{word}\\" else: ret = f\\"{ret}{word}\\" #initialize text text = \\"\\" return ret"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-02T12:24:50.000Z"}],["meta",{"property":"article:author","content":"Yichi"}],["meta",{"property":"article:modified_time","content":"2024-09-02T12:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阅读（Reading）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-02T12:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yichi\\",\\"url\\":\\"https://yclord.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"Common Function","slug":"common-function","link":"#common-function","children":[{"level":3,"title":"Scripts","slug":"scripts","link":"#scripts","children":[]}]}],"git":{"createdTime":1724846579000,"updatedTime":1725279890000,"contributors":[{"name":"unknown","email":"unisa.dady@gmail.com","commits":3}]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"chinese/reading/README.md","localizedDate":"August 28, 2024","excerpt":"<p>从左侧边栏选择相关内容</p>\\n<h2> Common Function</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> os\\n<span class=\\"token keyword\\">import</span> sys\\n\\n<span class=\\"token keyword\\">from</span> pypinyin <span class=\\"token keyword\\">import</span> pinyin<span class=\\"token punctuation\\">,</span> lazy_pinyin<span class=\\"token punctuation\\">,</span> Style\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">isChinese</span><span class=\\"token punctuation\\">(</span>word<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> <span class=\\"token string\\">'，。？！：；、）（“”…《 》【】——·'</span><span class=\\"token punctuation\\">.</span>__contains__<span class=\\"token punctuation\\">(</span>word<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">'\\\\u0e00'</span><span class=\\"token operator\\">&lt;=</span>word<span class=\\"token operator\\">&lt;=</span><span class=\\"token string\\">'\\\\u9fa5'</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_pinyin_html</span><span class=\\"token punctuation\\">(</span>words<span class=\\"token punctuation\\">,</span> pinyins<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>words<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>pinyins<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>words<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>pinyins<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">raise</span> <span class=\\"token string\\">\\"Length is not equals\\"</span>\\n    ret <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>words<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        ret <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>ret<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">&lt;ruby&gt;</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>words<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">&lt;rt&gt;</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>pinyins<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">&lt;/rt&gt;&lt;/ruby&gt;\\"</span></span>\\n    <span class=\\"token keyword\\">return</span> ret\\n\\n<span class=\\"token keyword\\">def</span> <span class=\\"token function\\">htmlPinyin</span><span class=\\"token punctuation\\">(</span>words<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    ret <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span>\\n    offset <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n    text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span>\\n    <span class=\\"token keyword\\">for</span> word <span class=\\"token keyword\\">in</span> words<span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> isChinese<span class=\\"token punctuation\\">(</span>word<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            text <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>text<span class=\\"token punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>word<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n        <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token comment\\">#process pinyin</span>\\n            text_pinyin <span class=\\"token operator\\">=</span> pinyin<span class=\\"token punctuation\\">(</span>text<span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>text<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">:</span>\\n                ret <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>ret<span class=\\"token punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>get_pinyin_html<span class=\\"token punctuation\\">(</span>text<span class=\\"token punctuation\\">,</span> text_pinyin<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>word<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n            <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                ret <span class=\\"token operator\\">=</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>ret<span class=\\"token punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>word<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n            <span class=\\"token comment\\">#initialize text</span>\\n            text <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\"</span>\\n    <span class=\\"token keyword\\">return</span> ret\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
